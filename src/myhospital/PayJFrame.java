/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myhospital;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.event.ItemEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class PayJFrame extends javax.swing.JFrame {

    /**
     * Creates new form PayJFrame
     */
    
    private String SelectQueryFieldStr = "职工号";
    private static DBProcess db = null;
    private Vector mainVector = null;
    private Vector titleVector = null;
    private String sEMP_NO = null;
    private String tableNum = null;
    
    public PayJFrame() {
        db = new DBProcess();
        initComponents();
        mainVector = new Vector();
        titleVector = new Vector();
        titleVector.add("职工号");
	titleVector.add("姓名");
	titleVector.add("岗位");
        titleVector.add("科室");
        titleVector.add("工资");
        
        jL_Hello.setText("欢迎您！"+HosLoginJDialog.DEPT_NAME_True+"："+HosLoginJDialog.PAS_USER_True);
        setB();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Pay = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCB_QueryChoose = new javax.swing.JComboBox<>();
        jTF_QueryField = new javax.swing.JTextField();
        jB_Query = new javax.swing.JButton();
        jB_QueryAll = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jL_Name = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTF_PAY_NUM = new javax.swing.JTextField();
        jB_PAY = new javax.swing.JButton();
        jL_Hello = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu_Main = new javax.swing.JMenu();
        jMenu_Login = new javax.swing.JMenu();
        jMenu_Employee = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1100, 550));

        jTable_Pay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "职工号", "姓名", "岗位", "科室", "工资"
            }
        ));
        jTable_Pay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_PayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Pay);

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("查询员工");

        jLabel2.setText("选择查询方式");

        jLabel3.setText("=");

        jCB_QueryChoose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "职工号", "姓名", "岗位", "科室" }));
        jCB_QueryChoose.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_QueryChooseItemStateChanged(evt);
            }
        });

        jB_Query.setText("查询");
        jB_Query.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_QueryActionPerformed(evt);
            }
        });

        jB_QueryAll.setText("查询全部员工");
        jB_QueryAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_QueryAllActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel4.setText("设置工资");

        jL_Name.setText("请点击表中的员工，并给他设置工资");

        jLabel5.setText("元人民币");

        jB_PAY.setText("确认工资金额");
        jB_PAY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_PAYActionPerformed(evt);
            }
        });

        jL_Hello.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jL_Hello.setText("欢迎您！");

        jLabel6.setFont(new java.awt.Font("微软雅黑", 0, 30)); // NOI18N
        jLabel6.setText("工资设置界面");

        jMenuBar1.setPreferredSize(new java.awt.Dimension(70, 35));

        jMenu1.setText("窗口切换");
        jMenu1.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N

        jMenu_Main.setText("回到主菜单");
        jMenu_Main.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_MainMouseClicked(evt);
            }
        });
        jMenu1.add(jMenu_Main);

        jMenu_Login.setText("切换登录");
        jMenu_Login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_LoginMouseClicked(evt);
            }
        });
        jMenu1.add(jMenu_Login);

        jMenuBar1.add(jMenu1);

        jMenu_Employee.setText("员工管理");
        jMenu_Employee.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jMenu_Employee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_EmployeeMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu_Employee);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_PAY)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB_QueryChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTF_QueryField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jB_Query))
                            .addComponent(jB_QueryAll)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTF_PAY_NUM, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addComponent(jL_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jL_Hello, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jL_Hello))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jCB_QueryChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTF_QueryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_Query))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_QueryAll)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jL_Name)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTF_PAY_NUM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(jB_PAY))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCB_QueryChooseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_QueryChooseItemStateChanged
        // TODO add your handling code here:
        switch (evt.getStateChange()) {  
                case ItemEvent.SELECTED:  
                	SelectQueryFieldStr = (String) evt.getItem();  
                        System.out.println("选中：" + SelectQueryFieldStr);  
                        break;  
                case ItemEvent.DESELECTED:  
                        System.out.println("取消选中：" + evt.getItem());  
                        break;  
        }
    }//GEN-LAST:event_jCB_QueryChooseItemStateChanged

    private void jB_QueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_QueryActionPerformed
        // TODO add your handling code here:
        //设置sql语句
        String sqlWord = jTF_QueryField.getText().trim();
        String sql = null;
        sql = "USE MyHospital; " +
              "SELECT EMPLOYEE.EMP_NO,EMP_NAME,JOB_NAME,DEPT_NAME,PAY_NUM " +
              "FROM EMPLOYEE,EMP_JOB_DEPT,DEPT,JOB,PAY " +
              "WHERE EMPLOYEE.EMP_NO=EMP_JOB_DEPT.EMP_NO AND EMP_JOB_DEPT.DEPT_NO=DEPT.DEPT_NO " +
              "AND EMP_JOB_DEPT.JOB_NO=JOB.JOB_NO AND EMPLOYEE.EMP_NO=PAY.EMP_NO ";
        if(SelectQueryFieldStr.equals("职工号")){
            sql += "AND EMPLOYEE.EMP_NO='" + sqlWord + "';"; 
        }
        else if(SelectQueryFieldStr.equals("姓名")){
            sql += "AND EMP_NAME='" + sqlWord + "';";
        }
        else if(SelectQueryFieldStr.equals("岗位")){
            sql += "AND JOB_NAME='" + sqlWord + "';";
        }
        else if(SelectQueryFieldStr.equals("科室")){
            sql += "AND DEPT_NAME='" + sqlWord + "';";
        }
        
        //连接并获取数据
        db.connect();
        ResultSet rs = null;
        rs = db.executeQuery(sql);
        
        //将数据展示到表格上
        try {
            DefaultTableModel dtm = (DefaultTableModel)jTable_Pay.getModel();
            mainVector.clear();
            while(rs.next()){
                Vector v = new Vector();
		v.add(rs.getString("EMP_NO"));
		v.add(rs.getString("EMP_NAME"));
                v.add(rs.getString("JOB_NAME"));
                v.add(rs.getString("DEPT_NAME"));
                v.add(rs.getString("PAY_NUM"));
                mainVector.add(v);
            }
            
            dtm.setDataVector(mainVector, titleVector);
            jTable_Pay.updateUI();
                
        } catch (SQLException ex) {
            System.out.println("SQLError.sql = " + sql);
            Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //将查询框内容置空
        jTF_QueryField.setText("");  
        
        
        /*
        //设置sql语句
        String sqlWord = jTF_QueryField.getText().trim();
        String sql = null;
        String sqll = null;
        sql = "USE MyHospital; " +
              "SELECT EMPLOYEE.EMP_NO,EMP_NAME,JOB_NAME,DEPT_NAME " +
              "FROM EMPLOYEE,EMP_JOB_DEPT,DEPT,JOB  " +
              "WHERE EMPLOYEE.EMP_NO=EMP_JOB_DEPT.EMP_NO AND EMP_JOB_DEPT.DEPT_NO=DEPT.DEPT_NO " +
              "AND EMP_JOB_DEPT.JOB_NO=JOB.JOB_NO ";
        sqll = "USE MyHospital; " +
               "SELECT EMP_NO,PAY_NUM " +
               "FROM PAY  " ;
        if(SelectQueryFieldStr.equals("职工号")){
            sql += "AND EMPLOYEE.EMP_NO='" + sqlWord + "';"; 
            sqll += "WHERE EMP_NO='" + sqlWord + "';"; 
        }
        else if(SelectQueryFieldStr.equals("姓名")){
            sql += "AND EMP_NAME='" + sqlWord + "';";
            sqll += "WHERE EMP_NAME='" + sqlWord + "';";
        }
        else if(SelectQueryFieldStr.equals("岗位")){
            sql += "AND JOB_NAME='" + sqlWord + "';";
        }
        else if(SelectQueryFieldStr.equals("科室")){
            sql += "AND DEPT_NAME='" + sqlWord + "';";
        }
        
        
        //连接并获取数据
        db.connect();
        ResultSet rs = null;
        rs = db.executeQuery(sql);
        ResultSet rss = null;
        rss = db.executeQuery(sqll);
        
        //将数据展示到表格上
        try {
            DefaultTableModel dtm = (DefaultTableModel)jTable_Pay.getModel();
            mainVector.clear();
            rss.next();
            while(rs.next()){
                Vector v = new Vector();
		v.add(rs.getString("EMP_NO"));
		v.add(rs.getString("EMP_NAME"));
                v.add(rs.getString("JOB_NAME"));
                v.add(rs.getString("DEPT_NAME"));
                if(rs.getString("EMP_NO").equals(rss.getString("EMP_NO"))){
                    v.add(rs.getString("PAY_NUM"));
                }
                mainVector.add(v);
            }
            
            dtm.setDataVector(mainVector, titleVector);
            jTable_Pay.updateUI();
                
        } catch (SQLException ex) {
            System.out.println("SQLError.sql = " + sql);
            Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //将查询框内容置空
        jTF_QueryField.setText("");  
        */
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jB_QueryActionPerformed

    private void jB_QueryAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_QueryAllActionPerformed
        // TODO add your handling code here:
        queryAllProcess();
    }//GEN-LAST:event_jB_QueryAllActionPerformed

    private void jTable_PayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_PayMouseClicked
        // TODO add your handling code here:
        int row = 0;
        String name = null;
        row = ((JTable) evt.getSource()).rowAtPoint(evt.getPoint()); // 获得行位置
	System.out.println("mouseClicked(). row = " + row);
	Vector v = new Vector();
	v = (Vector) mainVector.get(row);
        
        name = (String)v.get(1);
        sEMP_NO = (String)v.get(0);
        tableNum = (String)v.get(4);
        jL_Name.setText("您正在给【" + name + "】设置工资，请设置工资金额：");
    }//GEN-LAST:event_jTable_PayMouseClicked

    private void jB_PAYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_PAYActionPerformed
        // TODO add your handling code here:
        /*//Update
        String sql = null;
        String sPAY_NUM = jTF_PAY_NUM.getText().trim();
        
        if(sPAY_NUM.isEmpty()){
            JOptionPane.showMessageDialog(null,"数据不可为空","错误",JOptionPane.ERROR_MESSAGE);
        }
        else{
            //sql  
            sql = "USE MyHospital; " +
                  "UPDATE PAY " +
                  "SET EMP_NO='"+sEMP_NO+"',PAY_NUM="+sPAY_NUM+" " +
                  "WHERE EMP_NO = '"+sEMP_NO+"'; ";
            System.out.println("Update.sql = "+sql);
            
            //执行
            try{
		if (db.executeUpdate(sql) < 1) {
			System.out.println("updateProcess(). update database failed.");
		}
	    }catch(Exception e){
		System.out.println("e = " + e);
		JOptionPane.showMessageDialog(null,"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);
	    }
            
            queryAllProcess();
        }  */
        
        //Update
        String sql = null;
        String sPAY_NUM = jTF_PAY_NUM.getText().trim();
        System.out.println(tableNum);
        
        if(sPAY_NUM.isEmpty()){
            JOptionPane.showMessageDialog(null,"数据不可为空","错误",JOptionPane.ERROR_MESSAGE);
        }
        else if(tableNum == null){
            //insert
            //sql
            sql = "USE MyHospital; " +
                  "INSERT INTO PAY " +
                  "(EMP_NO,PAY_NUM) " +
                  "VALUES('"+sEMP_NO+"',"+sPAY_NUM+"); ";
            System.out.println("insert.sql = "+sql);
            
            //
            db.connect();
            
            //
            try{
			if (db.executeUpdate(sql) < 1) {
				System.out.println("insertProcess(). insert database failed.");
			}
		}catch(Exception e){
			System.out.println("e = " + e);
			JOptionPane.showMessageDialog(null,"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);
		}
            
            queryAllProcess();
        }
        else{
            //sql  
            sql = "USE MyHospital; " +
                  "UPDATE PAY " +
                  "SET EMP_NO='"+sEMP_NO+"',PAY_NUM="+sPAY_NUM+" " +
                  "WHERE EMP_NO = '"+sEMP_NO+"'; ";
            System.out.println("Update.sql = "+sql);
            
            //执行
            try{
		if (db.executeUpdate(sql) < 1) {
			System.out.println("updateProcess(). update database failed.");
		}
	    }catch(Exception e){
		System.out.println("e = " + e);
		JOptionPane.showMessageDialog(null,"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);
	    }
            
            queryAllProcess();
        } 
        
        
        
        
        
    }//GEN-LAST:event_jB_PAYActionPerformed

    private void jMenu_MainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_MainMouseClicked
        // TODO add your handling code here:
        new HospitalJFrame().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu_MainMouseClicked

    private void jMenu_LoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_LoginMouseClicked
        // TODO add your handling code here:
        new HosLoginJDialog().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu_LoginMouseClicked

    private void jMenu_EmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_EmployeeMouseClicked
        // TODO add your handling code here:
        new EmployeeJFrame().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu_EmployeeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PayJFrame().setVisible(true);
            }
        });
    }

    private void queryAllProcess(){
        /*//设置sql语句
        String sql = null;
        sql = "USE MyHospital; " +
              "SELECT EMPLOYEE.EMP_NO,EMP_NAME,JOB_NAME,DEPT_NAME,PAY_NUM " +
              "FROM EMPLOYEE,EMP_JOB_DEPT,DEPT,JOB,PAY " +
              "WHERE EMPLOYEE.EMP_NO=EMP_JOB_DEPT.EMP_NO AND EMP_JOB_DEPT.DEPT_NO=DEPT.DEPT_NO " +
              "AND EMP_JOB_DEPT.JOB_NO=JOB.JOB_NO AND EMPLOYEE.EMP_NO=PAY.EMP_NO; ";
        
        //连接并获取数据
        db.connect();
        ResultSet rs = null;
        rs = db.executeQuery(sql);
        
        //将数据展示到表格上
        try {
            DefaultTableModel dtm = (DefaultTableModel)jTable_Pay.getModel();
            mainVector.clear();
            while(rs.next()){
                Vector v = new Vector();
		v.add(rs.getString("EMP_NO"));
		v.add(rs.getString("EMP_NAME"));
                v.add(rs.getString("JOB_NAME"));
                v.add(rs.getString("DEPT_NAME"));
                v.add(rs.getString("PAY_NUM"));
                mainVector.add(v);
            }
            
            dtm.setDataVector(mainVector, titleVector);
            jTable_Pay.updateUI();
                
        } catch (SQLException ex) {
            System.out.println("SQLError.sql = " + sql);
            Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }   */
        
        
        //设置sql语句
        String sql = null;
        String sqll = null;
        sql = "USE MyHospital; " +
              "SELECT EMPLOYEE.EMP_NO,EMP_NAME,JOB_NAME,DEPT_NAME " +
              "FROM EMPLOYEE,EMP_JOB_DEPT,DEPT,JOB " +
              "WHERE EMPLOYEE.EMP_NO=EMP_JOB_DEPT.EMP_NO AND EMP_JOB_DEPT.DEPT_NO=DEPT.DEPT_NO " +
              "AND EMP_JOB_DEPT.JOB_NO=JOB.JOB_NO; ";
        sqll = "USE MyHospital; " +
               "SELECT EMP_NO,PAY_NUM " +
               "FROM PAY; ";
        
        //连接并获取数据
        db.connect();
        ResultSet rs = null;
        ResultSet rss = null;
        rs = db.executeQuery(sql);
        rss = db.executeQuery(sqll);
        
        //将数据展示到表格上
        try {
            DefaultTableModel dtm = (DefaultTableModel)jTable_Pay.getModel();
            mainVector.clear();
            rss.next();
            while(rs.next()){
                Vector v = new Vector();
		v.add(rs.getString("EMP_NO"));
		v.add(rs.getString("EMP_NAME"));
                v.add(rs.getString("JOB_NAME"));
                v.add(rs.getString("DEPT_NAME"));
                if(rs.getString("EMP_NO").equals(rss.getString("EMP_NO"))){
                    v.add(rss.getString("PAY_NUM"));
                    rss.next();
                }
                //v.add(rs.getString("PAY_NUM"));
                mainVector.add(v);
            }
            
            dtm.setDataVector(mainVector, titleVector);
            jTable_Pay.updateUI();
                
        } catch (SQLException ex) {
            System.out.println("SQLError.sql = " + sql);
            Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
    private void setB(){
         ImageIcon img = new ImageIcon("F:/UsingItems/MyHospital/back.jpg");//这是背景图片////////////////////////////////
         JLabel imgLabel = new JLabel(img);//将背景图放在标签里。
           this.getLayeredPane().add(imgLabel, new Integer(Integer.MIN_VALUE));//注意这里是关键，将背景标签添加到jfram的LayeredPane面板里。
           imgLabel.setBounds(0,0,img.getIconWidth(), img.getIconHeight());//设置背景标签的位置
           Container cp=this.getContentPane();
           cp.setLayout(new BorderLayout());
           ((JPanel)cp).setOpaque(false); //注意这里，将内容面板设为透明。这样LayeredPane面板中的背景才能显示出来。
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_PAY;
    private javax.swing.JButton jB_Query;
    private javax.swing.JButton jB_QueryAll;
    private javax.swing.JComboBox<String> jCB_QueryChoose;
    private javax.swing.JLabel jL_Hello;
    private javax.swing.JLabel jL_Name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenu_Employee;
    private javax.swing.JMenu jMenu_Login;
    private javax.swing.JMenu jMenu_Main;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTF_PAY_NUM;
    private javax.swing.JTextField jTF_QueryField;
    private javax.swing.JTable jTable_Pay;
    // End of variables declaration//GEN-END:variables
}
