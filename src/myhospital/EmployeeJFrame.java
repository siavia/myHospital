/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myhospital;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.event.ItemEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.*;

/**
 *
 * @author Administrator
 */
public class EmployeeJFrame extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeJFrame
     */
    
    private static DBProcess db = null;
    private String SelectQueryFieldStr = "职工号";
    private Vector mainVector = null;
    private Vector titleVector = null;
    
    public EmployeeJFrame() {
        initComponents();
        db = new DBProcess();
        setJComboBoxDept();
        setJComboBoxJob();
        System.out.println(HosLoginJDialog.DEPT_NO_True);
        if(HosLoginJDialog.DEPT_NO_True.equals("002"))
            jCB_DEPT_NO.removeItemAt(0);
        mainVector = new Vector();
        titleVector = new Vector();
        titleVector.add("职工号");
	titleVector.add("姓名");
	titleVector.add("岗位");
        titleVector.add("科室");
        titleVector.add("性别");
        titleVector.add("学历");
        titleVector.add("生日");
        titleVector.add("籍贯");
        titleVector.add("国籍");
        titleVector.add("民族");
        titleVector.add("身份证号");
        titleVector.add("婚姻状况");
        titleVector.add("健康情况");
        titleVector.add("入职时间");
        titleVector.add("员工状态");
        titleVector.add("家庭住址");
        titleVector.add("联系电话");
        titleVector.add("email");
            
        
        
        this.setResizable(false);
        //fitTableColumns(jTable2);
        jL_Hello.setText("欢迎您！"+HosLoginJDialog.DEPT_NAME_True+"："+HosLoginJDialog.PAS_USER_True);
        setLocationRelativeTo(null);
        jTable_Employee.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);//其他所有列不调整（添加横向滚动栏的关键代码）
        setB();
    }
    
    //table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);后面所有的列跟着调整
    //table.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);调整最后一列
    //table.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);调整下一列
    //table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);其他所有列不调整（添加横向滚动栏的关键代码）
    //table.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);默认的

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Employee = new javax.swing.JTable();
        jCB_DEPT_NO = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTF_EMP_NO = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTF_EMP_NAME = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTF_EMP_ID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTF_EMP_BIRTH = new javax.swing.JTextField();
        jTF_EMP_TEL = new javax.swing.JTextField();
        jTF_EMP_HOMETOWN = new javax.swing.JTextField();
        jTF_EMP_STARTWORK = new javax.swing.JTextField();
        jTF_EMP_HEALTH = new javax.swing.JTextField();
        jTF_EMP_COUNTRY = new javax.swing.JTextField();
        jTF_EMP_EMAIL = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTF_EMP_XL = new javax.swing.JTextField();
        jTF_EMP_ADDRESS = new javax.swing.JTextField();
        jTF_EMP_MARRIAGE = new javax.swing.JTextField();
        jTF_EMP_NATION = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jCB_Choose = new javax.swing.JComboBox<>();
        jTF_QueryField = new javax.swing.JTextField();
        jB_Query = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jB_QueryAll = new javax.swing.JButton();
        jCB_JOB_NO = new javax.swing.JComboBox<>();
        jB_Insert = new javax.swing.JButton();
        jB_Update = new javax.swing.JButton();
        jB_Delete = new javax.swing.JButton();
        jCB_EMP_SEX = new javax.swing.JComboBox<>();
        jCB_EMP_STATE = new javax.swing.JComboBox<>();
        jL_Hello = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu_Main = new javax.swing.JMenu();
        jMenu_Login = new javax.swing.JMenu();
        jMenu_Pay = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1100, 550));
        setSize(new java.awt.Dimension(1100, 550));

        jTable_Employee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "职工号", "姓名", "岗位", "科室", "性别", "学历", "生日", "籍贯", "国籍", "民族", "身份证号", "婚姻状况", "健康情况", "入职时间", "员工状态", "家庭住址", "联系电话", "email"
            }
        ));
        jTable_Employee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_EmployeeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Employee);
        if (jTable_Employee.getColumnModel().getColumnCount() > 0) {
            jTable_Employee.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable_Employee.getColumnModel().getColumn(4).setPreferredWidth(45);
            jTable_Employee.getColumnModel().getColumn(10).setPreferredWidth(150);
            jTable_Employee.getColumnModel().getColumn(15).setPreferredWidth(200);
        }

        jCB_DEPT_NO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "科   室" }));

        jLabel1.setText("职工号");

        jLabel2.setText("生日");

        jLabel3.setText("身份证号");

        jLabel4.setText("员工状态");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel5.setText("员工信息管理");

        jLabel7.setText("姓名");

        jLabel8.setText("性别");

        jLabel9.setText("学历");

        jLabel10.setText("籍贯");

        jLabel11.setText("国籍");

        jLabel12.setText("民族");

        jLabel13.setText("婚姻状况");

        jLabel14.setText("健康情况");

        jLabel15.setText("入职时间");

        jLabel16.setText("家庭住址");

        jLabel17.setText("联系电话");

        jLabel18.setText("email");

        jTF_EMP_BIRTH.setForeground(new java.awt.Color(153, 153, 153));
        jTF_EMP_BIRTH.setText("如2000-01-01");

        jTF_EMP_STARTWORK.setForeground(new java.awt.Color(153, 153, 153));
        jTF_EMP_STARTWORK.setText("如2018-12-27");

        jLabel6.setText("岗位");

        jLabel19.setText("科室");

        jLabel20.setText("选择查询方式");

        jLabel21.setText("输入查询内容");

        jCB_Choose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "职工号", "姓名", "岗位", "科室" }));
        jCB_Choose.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_ChooseItemStateChanged(evt);
            }
        });

        jB_Query.setText("查询");
        jB_Query.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_QueryActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel22.setText("查询");

        jB_QueryAll.setText("查询全体员工");
        jB_QueryAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_QueryAllActionPerformed(evt);
            }
        });

        jCB_JOB_NO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "岗   位" }));

        jB_Insert.setText("添加员工信息");
        jB_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_InsertActionPerformed(evt);
            }
        });

        jB_Update.setText("修改员工信息");
        jB_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_UpdateActionPerformed(evt);
            }
        });

        jB_Delete.setText("删除员工信息");
        jB_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_DeleteActionPerformed(evt);
            }
        });

        jCB_EMP_SEX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "男", "女" }));

        jCB_EMP_STATE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "工作", "派遣", "休假", "实习", "留职察看" }));

        jL_Hello.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jL_Hello.setText("欢迎您！");

        jLabel24.setFont(new java.awt.Font("微软雅黑", 0, 30)); // NOI18N
        jLabel24.setText("员工管理界面");

        jMenuBar1.setMinimumSize(new java.awt.Dimension(70, 35));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(70, 35));

        jMenu2.setText("窗口切换");
        jMenu2.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N

        jMenu_Main.setText("回到主菜单");
        jMenu_Main.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jMenu_Main.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_MainMouseClicked(evt);
            }
        });
        jMenu2.add(jMenu_Main);

        jMenu_Login.setText("切换账户");
        jMenu_Login.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jMenu_Login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_LoginMouseClicked(evt);
            }
        });
        jMenu2.add(jMenu_Login);

        jMenuBar1.add(jMenu2);

        jMenu_Pay.setText("工资设置");
        jMenu_Pay.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jMenu_Pay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_PayMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu_Pay);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jL_Hello, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1071, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jB_Query)
                                .addComponent(jTF_QueryField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jB_QueryAll)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel20)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jCB_Choose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(191, 191, 191)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTF_EMP_NO, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTF_EMP_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jCB_EMP_SEX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel17))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCB_EMP_STATE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTF_EMP_BIRTH, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTF_EMP_TEL)
                                    .addComponent(jTF_EMP_HOMETOWN)
                                    .addComponent(jTF_EMP_STARTWORK, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTF_EMP_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTF_EMP_ADDRESS, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel19)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jTF_EMP_HEALTH)
                                                        .addComponent(jTF_EMP_COUNTRY, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel13)
                                                        .addComponent(jLabel12)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jTF_EMP_EMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel9))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTF_EMP_MARRIAGE)
                                            .addComponent(jTF_EMP_NATION)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jCB_DEPT_NO, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTF_EMP_XL, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB_JOB_NO, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jB_Insert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_Update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jB_Delete)
                        .addGap(227, 227, 227)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jL_Hello))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jB_Insert)
                            .addComponent(jB_Update)
                            .addComponent(jB_Delete)))
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19)
                                .addComponent(jCB_DEPT_NO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTF_EMP_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)
                                .addComponent(jTF_EMP_NO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6)
                                .addComponent(jCB_JOB_NO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17)
                                .addComponent(jTF_EMP_TEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)
                                .addComponent(jCB_EMP_SEX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTF_EMP_EMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(jLabel18)
                                .addComponent(jTF_EMP_XL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTF_EMP_BIRTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10)
                                        .addComponent(jTF_EMP_HOMETOWN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTF_EMP_NATION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel15)
                                    .addComponent(jTF_EMP_STARTWORK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14)
                                    .addComponent(jTF_EMP_HEALTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)
                                    .addComponent(jTF_EMP_MARRIAGE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCB_EMP_STATE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTF_EMP_COUNTRY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jTF_EMP_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(jTF_EMP_ADDRESS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCB_Choose, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jTF_QueryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_Query)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_QueryAll)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCB_ChooseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_ChooseItemStateChanged
        // TODO add your handling code here:
        switch (evt.getStateChange()) {  
                case ItemEvent.SELECTED:  
                	SelectQueryFieldStr = (String) evt.getItem();  
                        System.out.println("选中：" + SelectQueryFieldStr);  
                        break;  
                case ItemEvent.DESELECTED:  
                        System.out.println("取消选中：" + evt.getItem());  
                        break;  
        }
    }//GEN-LAST:event_jCB_ChooseItemStateChanged

    private void jB_QueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_QueryActionPerformed
        // TODO add your handling code here:
        //设置sql语句
        String sqlWord = jTF_QueryField.getText().trim();
        String sql = null;
        sql = "USE MyHospital; " +
              "SELECT EMPLOYEE.EMP_NO,EMP_NAME,JOB_NAME,DEPT_NAME,EMP_SEX,EMP_XL,EMP_BIRTH,EMP_HOMETOWN,EMP_COUNTRY, " +
              "EMP_NATION,EMP_ID,EMP_MARRIAGE,EMP_HEALTH,EMP_STARTWORK,EMP_STATE,EMP_ADDRESS,EMP_TEL,EMP_EMAIL " +
              "FROM EMPLOYEE,EMP_JOB_DEPT,DEPT,JOB " +
              "WHERE EMPLOYEE.EMP_NO=EMP_JOB_DEPT.EMP_NO AND EMP_JOB_DEPT.DEPT_NO=DEPT.DEPT_NO AND EMP_JOB_DEPT.JOB_NO=JOB.JOB_NO ";
              //"AND EMPLOYEE.EMP_NO='2014001001'; ";
        if(SelectQueryFieldStr.equals("职工号")){
            sql += "AND EMPLOYEE.EMP_NO='" + sqlWord + "';"; 
        }
        else if(SelectQueryFieldStr.equals("姓名")){
            sql += "AND EMP_NAME='" + sqlWord + "';";
        }
        else if(SelectQueryFieldStr.equals("岗位")){
            sql += "AND JOB_NAME='" + sqlWord + "';";
        }
        else if(SelectQueryFieldStr.equals("科室")){
            sql += "AND DEPT_NAME='" + sqlWord + "';";
        }
        
        //连接并获取数据
        db.connect();
        ResultSet rs = null;
        rs = db.executeQuery(sql);
       
        //将数据展示到表格上
        try {
            DefaultTableModel dtm = (DefaultTableModel)jTable_Employee.getModel();
            mainVector.clear();
            while(rs.next()){
                Vector v = new Vector();
		v.add(rs.getString("EMP_NO"));
		v.add(rs.getString("EMP_NAME"));
                v.add(rs.getString("JOB_NAME"));
                v.add(rs.getString("DEPT_NAME"));
                if(rs.getString("EMP_SEX").equals("1"))
                    v.add("女");
                else
                    v.add("男");
		v.add(rs.getString("EMP_XL"));
                v.add(rs.getString("EMP_BIRTH"));
                v.add(rs.getString("EMP_HOMETOWN"));
                v.add(rs.getString("EMP_COUNTRY"));
		v.add(rs.getString("EMP_NATION"));
		v.add(rs.getString("EMP_ID"));
                v.add(rs.getString("EMP_MARRIAGE"));
                v.add(rs.getString("EMP_HEALTH"));
                v.add(rs.getString("EMP_STARTWORK"));
                v.add(rs.getString("EMP_STATE"));
                v.add(rs.getString("EMP_ADDRESS"));
                v.add(rs.getString("EMP_TEL"));
                v.add(rs.getString("EMP_EMAIL")); 
                mainVector.add(v);
            }
       
            dtm.setDataVector(mainVector, titleVector);
            jTable_Employee.updateUI();
                
        } catch (SQLException ex) {
            System.out.println("SQLError.sql = " + sql);
            Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //
        if (jTable_Employee.getColumnModel().getColumnCount() > 0) {
                jTable_Employee.getColumnModel().getColumn(0).setPreferredWidth(100);
                jTable_Employee.getColumnModel().getColumn(4).setPreferredWidth(45);
                jTable_Employee.getColumnModel().getColumn(10).setPreferredWidth(150);
                jTable_Employee.getColumnModel().getColumn(15).setPreferredWidth(200);
        }
        
        //将查询框内容置空
        jTF_QueryField.setText("");  
    }//GEN-LAST:event_jB_QueryActionPerformed

    private void jB_QueryAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_QueryAllActionPerformed
        // TODO add your handling code here:
        queryAllProcess();
    }//GEN-LAST:event_jB_QueryAllActionPerformed

    private void jTable_EmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_EmployeeMouseClicked
        // TODO add your handling code here:
        int row = 0;
        //row = jTable_Employee.getSelectedRow();
        row = ((JTable) evt.getSource()).rowAtPoint(evt.getPoint()); // 获得行位置
	System.out.println("mouseClicked(). row = " + row);
	Vector v = new Vector();
	v = (Vector) mainVector.get(row);
        
        //test///////////////////////////////////////////////////////////////////////////////////////
        //jComboBox1.setSelectedItem((String) v.get(3));
        //System.out.println(jComboBox1.getSelectedItem());
        //jComboBox1.removeItemAt(WIDTH);
        //jComboBox1.getItemAt(WIDTH);
        //jComboBox1.remove(WIDTH);
        //jComboBox1.setSelectedIndex(WIDTH);

	jTF_EMP_NO.setText((String) v.get(0));// 职工号   这里的v.get(0)，实际上是 mainVector.get(row).get(0)
	jTF_EMP_NAME.setText((String) v.get(1));// 姓名
        jCB_JOB_NO.setSelectedItem((String) v.get(2));// 岗位
        jCB_DEPT_NO.setSelectedItem((String) v.get(3));// 科室号
        jCB_EMP_SEX.setSelectedItem((String) v.get(4));// 性别
        jTF_EMP_XL.setText((String) v.get(5));// 学历	
	jTF_EMP_BIRTH.setText((String) v.get(6));// 生日
	jTF_EMP_HOMETOWN.setText((String) v.get(7));// 籍贯
	jTF_EMP_COUNTRY.setText((String) v.get(8));// 	国籍
        jTF_EMP_NATION.setText((String) v.get(9));//	民族
        jTF_EMP_ID.setText((String) v.get(10));//	身份证号
        jTF_EMP_MARRIAGE.setText((String) v.get(11));//	婚姻状况
        jTF_EMP_HEALTH.setText((String) v.get(12));//	健康情况
        jTF_EMP_STARTWORK.setText((String) v.get(13));//	入职时间
        jCB_EMP_STATE.setSelectedItem((String) v.get(14));// 员工状态（上班、休假、调派）
        jTF_EMP_ADDRESS.setText((String) v.get(15));// 	家庭住址
        jTF_EMP_TEL.setText((String) v.get(16));//	联系电话
        jTF_EMP_EMAIL.setText((String) v.get(17));//	email;
        
        jTF_EMP_BIRTH.setForeground(new java.awt.Color(0,0,0));
        jTF_EMP_STARTWORK.setForeground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_jTable_EmployeeMouseClicked

    private void jB_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_InsertActionPerformed
        // TODO add your handling code here:
        String sql = null;
        String sEMP_NO = jTF_EMP_NO.getText().trim();
        String sEMP_NAME = jTF_EMP_NAME.getText().trim();
        String sJOB_NO = jCB_JOB_NO.getSelectedItem().toString().trim();////////#####################///////
        String sDEPT_NO = jCB_DEPT_NO.getSelectedItem().toString().trim();////////#####################///////
        String sEMP_SEX = jCB_EMP_SEX.getSelectedItem().toString().trim();////////#####################///////
        String sEMP_XL = jTF_EMP_XL.getText().trim();
        String sEMP_BIRTH = jTF_EMP_BIRTH.getText().trim();
        String sEMP_HOMETOWN = jTF_EMP_HOMETOWN.getText().trim();
        String sEMP_COUNTRY = jTF_EMP_COUNTRY.getText().trim();
        String sEMP_NATION = jTF_EMP_NATION.getText().trim();
        String sEMP_ID = jTF_EMP_ID.getText().trim();
        String sEMP_MARRIAGE = jTF_EMP_MARRIAGE.getText().trim();
        String sEMP_HEALTH = jTF_EMP_HEALTH.getText().trim();
        String sEMP_STARTWORK = jTF_EMP_STARTWORK.getText().trim();
        String sEMP_STATE = jCB_EMP_STATE.getSelectedItem().toString().trim();////////#####################///////
        String sEMP_ADDRESS = jTF_EMP_ADDRESS.getText().trim();
        String sEMP_TEL = jTF_EMP_TEL.getText().trim();
        String sEMP_EMAIL = jTF_EMP_EMAIL.getText().trim();
        
        
        if(sEMP_NO.isEmpty() || sEMP_NAME.isEmpty() || sJOB_NO.isEmpty()
                || sDEPT_NO.isEmpty() || sEMP_SEX.isEmpty() ||  sEMP_XL.isEmpty() 
                || sEMP_BIRTH.isEmpty() || sEMP_HOMETOWN.isEmpty() || sEMP_COUNTRY.isEmpty() 
                || sEMP_NATION.isEmpty() || sEMP_ID.isEmpty() || sEMP_MARRIAGE.isEmpty() 
                || sEMP_HEALTH.isEmpty() || sEMP_STARTWORK.isEmpty() || sEMP_STATE.isEmpty() 
                || sEMP_ADDRESS.isEmpty() || sEMP_TEL.isEmpty() || sEMP_EMAIL.isEmpty() ){
                        JOptionPane.showMessageDialog(null,"数据不可为空","错误",JOptionPane.ERROR_MESSAGE);
        }
        else{
            //SQL处理（找外码对应的内容）
            if(sEMP_SEX.equals("男"))
                sEMP_SEX = "0";
            else
                sEMP_SEX = "1";
            String sql1,sql2;
            sql1 = "USE MyHospital; " +
                  "SELECT JOB_NO " +
                  "FROM JOB " +
                  "WHERE JOB_NAME='" + sJOB_NO + "';";
            sql2 ="USE MyHospital; " +
                  "SELECT DEPT_NO " +
                  "FROM DEPT " +
                  "WHERE DEPT_NAME='" + sDEPT_NO + "';";
            db.connect();
            ResultSet rs1 = db.executeQuery(sql1);
            ResultSet rs2 = db.executeQuery(sql2);
            try {
                rs1.next();
                sJOB_NO = rs1.getString("JOB_NO");
                rs2.next();
                sDEPT_NO = rs2.getString("DEPT_NO");
                System.out.println(sJOB_NO + " " + sDEPT_NO);///////////////////////////////////////
            } catch (SQLException ex) {
                Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //SQL
            //sEMP_NO sEMP_NAME sJOB_NO sDEPT_NO sEMP_SEX   sEMP_XL   sEMP_BIRTH  sEMP_HOMETOWN  sEMP_COUNTRY sEMP_NATION  sEMP_ID  sEMP_MARRIAGE   sEMP_HEALTH sEMP_STARTWORK sEMP_STATE sEMP_ADDRESS sEMP_TEL sEMP_EMAIL
            sql = "USE MyHospital; " +
                  "INSERT INTO EMPLOYEE " +
                  "(EMP_NO,EMP_NAME,EMP_SEX,EMP_XL,EMP_BIRTH,EMP_HOMETOWN,EMP_COUNTRY, " +
                  "EMP_NATION,EMP_ID,EMP_MARRIAGE,EMP_HEALTH,EMP_STARTWORK,EMP_STATE,EMP_ADDRESS,EMP_TEL,EMP_EMAIL) " +
                  //"VALUES('2018002002','假黄宋',1,'硕士','2000-6-16','湖南','中国','苗族','225334200006160000','未婚','健康','2018-12-7','工作','湖南省xx市xx街道','15266472584','song@qq.com'); " +
                  "VALUES('"+ sEMP_NO +"','"+ sEMP_NAME +"',"+ sEMP_SEX +",'"+ sEMP_XL +"','"+ sEMP_BIRTH +"','"+ sEMP_HOMETOWN +"','"+ sEMP_COUNTRY +"','"+ sEMP_NATION +"','"+ sEMP_ID +"','"+ sEMP_MARRIAGE +"','"+ sEMP_HEALTH +"','"+ sEMP_STARTWORK +"','"+ sEMP_STATE +"','"+ sEMP_ADDRESS +"','"+ sEMP_TEL +"','"+ sEMP_EMAIL +"'); " +
                  "INSERT INTO EMP_JOB_DEPT " +
                  "(EMP_NO,JOB_NO,DEPT_NO) " +
                  //"VALUES('2018002002','001','002'); " + 
                  "VALUES('" + sEMP_NO +"','"+ sJOB_NO +"','"+ sDEPT_NO + "'); " + 
                  "INSERT INTO PAY " +
                  "(EMP_NO,PAY_NUM) " +
                  "VALUES('"+ sEMP_NO +"',0); " + 
                  "INSERT INTO PASSWORD " +
                  "(PAS_USER,PAS_PASSWORD,DEPT_NO) " +
                  "VALUES('"+ sEMP_NO +"','"+ sEMP_NO +"','"+ sDEPT_NO + "'); ";
            System.out.println("insertProcess(). sql = " + sql);
            
            //连接并获取数据
            db.connect();
            //ResultSet rs = null;
            //rs = db.executeQuery(sql);
            
            //操作
            try{
			if (db.executeUpdate(sql) < 1) {
				System.out.println("insertProcess(). insert database failed.");
			}
		}catch(Exception e){
			System.out.println("e = " + e);
			JOptionPane.showMessageDialog(null,"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);
		}
            
            //显示表格
            queryAllProcess();  
        }   
    }//GEN-LAST:event_jB_InsertActionPerformed

    private void jB_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_UpdateActionPerformed
        // TODO add your handling code here:
        String sql = null;
        String sEMP_NO = jTF_EMP_NO.getText().trim();
        String sEMP_NAME = jTF_EMP_NAME.getText().trim();
        String sJOB_NO = jCB_JOB_NO.getSelectedItem().toString().trim();////////#####################///////
        String sDEPT_NO = jCB_DEPT_NO.getSelectedItem().toString().trim();////////#####################///////
        String sEMP_SEX = jCB_EMP_SEX.getSelectedItem().toString().trim();////////#####################///////
        String sEMP_XL = jTF_EMP_XL.getText().trim();
        String sEMP_BIRTH = jTF_EMP_BIRTH.getText().trim();
        String sEMP_HOMETOWN = jTF_EMP_HOMETOWN.getText().trim();
        String sEMP_COUNTRY = jTF_EMP_COUNTRY.getText().trim();
        String sEMP_NATION = jTF_EMP_NATION.getText().trim();
        String sEMP_ID = jTF_EMP_ID.getText().trim();
        String sEMP_MARRIAGE = jTF_EMP_MARRIAGE.getText().trim();
        String sEMP_HEALTH = jTF_EMP_HEALTH.getText().trim();
        String sEMP_STARTWORK = jTF_EMP_STARTWORK.getText().trim();
        String sEMP_STATE = jCB_EMP_STATE.getSelectedItem().toString().trim();////////#####################///////
        String sEMP_ADDRESS = jTF_EMP_ADDRESS.getText().trim();
        String sEMP_TEL = jTF_EMP_TEL.getText().trim();
        String sEMP_EMAIL = jTF_EMP_EMAIL.getText().trim();
        
        if(sEMP_NO.isEmpty() || sEMP_NAME.isEmpty() || sJOB_NO.isEmpty()
                || sDEPT_NO.isEmpty() || sEMP_SEX.isEmpty() ||  sEMP_XL.isEmpty() 
                || sEMP_BIRTH.isEmpty() || sEMP_HOMETOWN.isEmpty() || sEMP_COUNTRY.isEmpty() 
                || sEMP_NATION.isEmpty() || sEMP_ID.isEmpty() || sEMP_MARRIAGE.isEmpty() 
                || sEMP_HEALTH.isEmpty() || sEMP_STARTWORK.isEmpty() || sEMP_STATE.isEmpty() 
                || sEMP_ADDRESS.isEmpty() || sEMP_TEL.isEmpty() || sEMP_EMAIL.isEmpty() ){
                        JOptionPane.showMessageDialog(null,"数据不可为空","错误",JOptionPane.ERROR_MESSAGE);
        }
        else{
            //SQL处理（找外码对应的内容）
            if(sEMP_SEX.equals("男"))
                sEMP_SEX = "0";
            else
                sEMP_SEX = "1";
            String sql1,sql2;
            sql1 = "USE MyHospital; " +
                  "SELECT JOB_NO " +
                  "FROM JOB " +
                  "WHERE JOB_NAME='" + sJOB_NO + "';";
            sql2 ="USE MyHospital; " +
                  "SELECT DEPT_NO " +
                  "FROM DEPT " +
                  "WHERE DEPT_NAME='" + sDEPT_NO + "';";
            db.connect();
            ResultSet rs1 = db.executeQuery(sql1);
            ResultSet rs2 = db.executeQuery(sql2);
            try {
                rs1.next();
                sJOB_NO = rs1.getString("JOB_NO");
                rs2.next();
                sDEPT_NO = rs2.getString("DEPT_NO");
                System.out.println(sJOB_NO + " " + sDEPT_NO);///////////////////////////////////////
            } catch (SQLException ex) {
                Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //sql
            //sEMP_NO sEMP_NAME sJOB_NO sDEPT_NO sEMP_SEX   sEMP_XL   sEMP_BIRTH  sEMP_HOMETOWN  sEMP_COUNTRY sEMP_NATION  sEMP_ID  sEMP_MARRIAGE   sEMP_HEALTH sEMP_STARTWORK sEMP_STATE sEMP_ADDRESS sEMP_TEL sEMP_EMAIL
            //"+sEMP_NO+" "+sEMP_NAME+" "+sJOB_NO+" "+sDEPT_NO+" "+sEMP_SEX+" "+sEMP_XL+" "+sEMP_BIRTH+" "+sEMP_HOMETOWN+" "+sEMP_COUNTRY+" "+sEMP_NATION+" "+sEMP_ID+" "+sEMP_MARRIAGE+" "+sEMP_HEALTH+" "+sEMP_STARTWORK+" "+sEMP_STATE+" "+sEMP_ADDRESS+" "+sEMP_TEL+" "+sEMP_EMAIL
            sql = "USE MyHospital; " +
                  "UPDATE EMPLOYEE " +
                  //"SET EMP_NO='2018002003',EMP_NAME='*',EMP_SEX=0,EMP_XL='*',EMP_BIRTH='2018-1-1',EMP_HOMETOWN='*',EMP_COUNTRY='*', " +
                  "SET EMP_NO='"+sEMP_NO+"',EMP_NAME='"+sEMP_NAME+"',EMP_SEX="+sEMP_SEX+",EMP_XL='"+sEMP_XL+"',EMP_BIRTH='"+sEMP_BIRTH+"',EMP_HOMETOWN='"+sEMP_HOMETOWN+"',EMP_COUNTRY='"+sEMP_COUNTRY+"', " +
                  //"EMP_NATION='*',EMP_ID='*',EMP_MARRIAGE='*',EMP_HEALTH='*',EMP_STARTWORK='2018-1-1',EMP_STATE='*',EMP_ADDRESS='*',EMP_TEL='*',EMP_EMAIL='*' " +
                  "EMP_NATION='"+sEMP_NATION+"',EMP_ID='"+sEMP_ID+"',EMP_MARRIAGE='"+sEMP_MARRIAGE+"',EMP_HEALTH='"+sEMP_HEALTH+"',EMP_STARTWORK='"+sEMP_STARTWORK+"',EMP_STATE='"+sEMP_STATE+"',EMP_ADDRESS='"+sEMP_ADDRESS+"',EMP_TEL='"+sEMP_TEL+"',EMP_EMAIL='"+sEMP_EMAIL+"' " +
                  //"WHERE EMP_NO = '2018002003'; " +
                  "WHERE EMP_NO = '"+sEMP_NO+"'; " +
                  "UPDATE EMP_JOB_DEPT " +
                  //"SET EMP_NO='2018002003',JOB_NO='001',DEPT_NO='001' " +
                  "SET EMP_NO='"+sEMP_NO+"',JOB_NO='"+sJOB_NO+"',DEPT_NO='"+sDEPT_NO+"' " +
                  //"WHERE EMP_NO = '2018002003'; ";
                  "WHERE EMP_NO = '"+sEMP_NO+"'; ";
            System.out.println("updateProcess.sql = "+sql);
            
            //执行
            try{
		if (db.executeUpdate(sql) < 1) {
			System.out.println("updateProcess(). update database failed.");
		}
	    }catch(Exception e){
		System.out.println("e = " + e);
		JOptionPane.showMessageDialog(null,"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);
	    }
            
            queryAllProcess();
        }
    }//GEN-LAST:event_jB_UpdateActionPerformed

    private void jB_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_DeleteActionPerformed
        // TODO add your handling code here:
        String sql = null;
        String sEMP_NO = jTF_EMP_NO.getText().trim();
        
        //sql
        sql = "USE MyHospital; DELETE FROM EMPLOYEE WHERE EMP_NO='" + sEMP_NO + "'; "+
                "DELETE FROM EMP_JOB_DEPT WHERE EMP_NO='"+ sEMP_NO + "'; ";  //////////////级联的问题
        System.out.println("delete_PC_Process(). sql = " + sql);
        
        //
        try{
	    if (db.executeUpdate(sql) < 1) {
		System.out.println("delete_PC_Process(). delete database failed.");
	    }}catch(Exception e){
			System.out.println("e = " + e);
			JOptionPane.showMessageDialog(null,"数据操作错误","错误",JOptionPane.ERROR_MESSAGE);
	}

        queryAllProcess();  
    }//GEN-LAST:event_jB_DeleteActionPerformed

    private void jMenu_MainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_MainMouseClicked
        // TODO add your handling code here:
        new HospitalJFrame().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu_MainMouseClicked

    private void jMenu_LoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_LoginMouseClicked
        // TODO add your handling code here:
        new HosLoginJDialog().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu_LoginMouseClicked

    private void jMenu_PayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_PayMouseClicked
        // TODO add your handling code here:
        String dn = HosLoginJDialog.DEPT_NO_True;
        if(dn.equals("001") || dn.equals("003")){
            new PayJFrame().setVisible(true);
            this.setVisible(false); 
        }
        else{
            JOptionPane.showMessageDialog(null,"您没有进入工资管理页面的权限","提示",JOptionPane.INFORMATION_MESSAGE);
        } 
    }//GEN-LAST:event_jMenu_PayMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeJFrame().setVisible(true);
            }
        });
    }

    public static void fitTableColumns(javax.swing.JTable myTable) {
    JTableHeader header = myTable.getTableHeader();
    int rowCount = myTable.getRowCount();

    Enumeration columns = myTable.getColumnModel().getColumns();
    while (columns.hasMoreElements()) {
        TableColumn column = (TableColumn) columns.nextElement();
        int col = header.getColumnModel().getColumnIndex(column.getIdentifier());
        int width = (int) myTable.getTableHeader().getDefaultRenderer()
                .getTableCellRendererComponent(myTable, column.getIdentifier(), false, false, -1, col)
                .getPreferredSize().getWidth();
        for (int row = 0; row < rowCount; row++) {
            int preferedWidth = (int) myTable.getCellRenderer(row, col)
                    .getTableCellRendererComponent(myTable, myTable.getValueAt(row, col), false, false, row, col)
                    .getPreferredSize().getWidth();
            width = Math.max(width, preferedWidth);
        }
        header.setResizingColumn(column);
        column.setWidth(width + myTable.getIntercellSpacing().width + 10);
    }
}
    
    public void setJComboBoxDept(){
        //sql
        String sql =null;
        sql = "USE MyHospital; SELECT DEPT_NAME FROM DEPT;";
        
        //sql执行
        db.connect();
        ResultSet rs = null;
        rs = db.executeQuery(sql);
        
        //操作到组合框
        jCB_DEPT_NO.removeAllItems();
        try {
            while(rs.next()){
                jCB_DEPT_NO.addItem(rs.getString("DEPT_NAME"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setJComboBoxJob(){
        //sql
        String sql =null;
        sql = "USE MyHospital; SELECT JOB_NAME FROM JOB;";
        
        //sql执行
        db.connect();
        ResultSet rs = null;
        rs = db.executeQuery(sql);
        
        //操作到组合框
        jCB_JOB_NO.removeAllItems();
        try {
            while(rs.next()){
                jCB_JOB_NO.addItem(rs.getString("JOB_NAME"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void queryAllProcess(){
        //设置sql语句
        String sql = null;
        sql = "USE MyHospital; " +
              "SELECT EMPLOYEE.EMP_NO,EMP_NAME,JOB_NAME,DEPT_NAME,EMP_SEX,EMP_XL,EMP_BIRTH,EMP_HOMETOWN,EMP_COUNTRY, " +
              "EMP_NATION,EMP_ID,EMP_MARRIAGE,EMP_HEALTH,EMP_STARTWORK,EMP_STATE,EMP_ADDRESS,EMP_TEL,EMP_EMAIL " +
              "FROM EMPLOYEE,EMP_JOB_DEPT,DEPT,JOB " +
              "WHERE EMPLOYEE.EMP_NO=EMP_JOB_DEPT.EMP_NO AND EMP_JOB_DEPT.DEPT_NO=DEPT.DEPT_NO AND EMP_JOB_DEPT.JOB_NO=JOB.JOB_NO; ";

        //连接并获取数据
        db.connect();
        ResultSet rs = null;
        rs = db.executeQuery(sql);
        
        //将数据展示到表格上
        try {
            DefaultTableModel dtm = (DefaultTableModel)jTable_Employee.getModel();
            mainVector.clear();
            while(rs.next()){
                Vector v = new Vector();
		v.add(rs.getString("EMP_NO"));
		v.add(rs.getString("EMP_NAME"));
                v.add(rs.getString("JOB_NAME"));
                v.add(rs.getString("DEPT_NAME"));
                if(rs.getString("EMP_SEX").equals("1"))
                    v.add("女");
                else
                    v.add("男");
                v.add(rs.getString("EMP_XL"));
                v.add(rs.getString("EMP_BIRTH"));
                v.add(rs.getString("EMP_HOMETOWN"));
                v.add(rs.getString("EMP_COUNTRY"));
		v.add(rs.getString("EMP_NATION"));
		v.add(rs.getString("EMP_ID"));
                v.add(rs.getString("EMP_MARRIAGE"));
                v.add(rs.getString("EMP_HEALTH"));
                v.add(rs.getString("EMP_STARTWORK"));
                v.add(rs.getString("EMP_STATE"));
                v.add(rs.getString("EMP_ADDRESS"));
                v.add(rs.getString("EMP_TEL"));
                v.add(rs.getString("EMP_EMAIL")); 
                mainVector.add(v);
            }
            
            dtm.setDataVector(mainVector, titleVector);
            jTable_Employee.updateUI();
            
        } catch (SQLException ex) {
            System.out.println("SQLError.sql = " + sql);
            Logger.getLogger(CureJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
        //
        if (jTable_Employee.getColumnModel().getColumnCount() > 0) {
                jTable_Employee.getColumnModel().getColumn(0).setPreferredWidth(100);
                jTable_Employee.getColumnModel().getColumn(4).setPreferredWidth(45);
                jTable_Employee.getColumnModel().getColumn(10).setPreferredWidth(150);
                jTable_Employee.getColumnModel().getColumn(15).setPreferredWidth(200);
        }
        
        
    }
    
    private void setB(){
         ImageIcon img = new ImageIcon("F:/UsingItems/MyHospital/back.jpg");//这是背景图片////////////////////////////////
         JLabel imgLabel = new JLabel(img);//将背景图放在标签里。
           this.getLayeredPane().add(imgLabel, new Integer(Integer.MIN_VALUE));//注意这里是关键，将背景标签添加到jfram的LayeredPane面板里。
           imgLabel.setBounds(0,0,img.getIconWidth(), img.getIconHeight());//设置背景标签的位置
           Container cp=this.getContentPane();
           cp.setLayout(new BorderLayout());
           ((JPanel)cp).setOpaque(false); //注意这里，将内容面板设为透明。这样LayeredPane面板中的背景才能显示出来。
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Delete;
    private javax.swing.JButton jB_Insert;
    private javax.swing.JButton jB_Query;
    private javax.swing.JButton jB_QueryAll;
    private javax.swing.JButton jB_Update;
    private javax.swing.JComboBox<String> jCB_Choose;
    private javax.swing.JComboBox<String> jCB_DEPT_NO;
    private javax.swing.JComboBox<String> jCB_EMP_SEX;
    private javax.swing.JComboBox<String> jCB_EMP_STATE;
    private javax.swing.JComboBox<String> jCB_JOB_NO;
    private javax.swing.JLabel jL_Hello;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenu_Login;
    private javax.swing.JMenu jMenu_Main;
    private javax.swing.JMenu jMenu_Pay;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF_EMP_ADDRESS;
    private javax.swing.JTextField jTF_EMP_BIRTH;
    private javax.swing.JTextField jTF_EMP_COUNTRY;
    private javax.swing.JTextField jTF_EMP_EMAIL;
    private javax.swing.JTextField jTF_EMP_HEALTH;
    private javax.swing.JTextField jTF_EMP_HOMETOWN;
    private javax.swing.JTextField jTF_EMP_ID;
    private javax.swing.JTextField jTF_EMP_MARRIAGE;
    private javax.swing.JTextField jTF_EMP_NAME;
    private javax.swing.JTextField jTF_EMP_NATION;
    private javax.swing.JTextField jTF_EMP_NO;
    private javax.swing.JTextField jTF_EMP_STARTWORK;
    private javax.swing.JTextField jTF_EMP_TEL;
    private javax.swing.JTextField jTF_EMP_XL;
    private javax.swing.JTextField jTF_QueryField;
    private javax.swing.JTable jTable_Employee;
    // End of variables declaration//GEN-END:variables
}
